services:
  #CyberTech Api
  cybertech-administration-api:
    build: ../CyberTech-Net/CyberTech.API/
    container_name: 'cybertech-administration-api'
    restart: always 
    ports:
      - "8091:8080"
    environment:
      - "Connections:DBConnection=Host=cybertech-administration-db;Database=cybertech-administration-db;Username=postgres;Password=docker"    
      - RMQSettings:Host=cybertech-rabbitmq
      - RMQSettings:VHost=/
      - RMQSettings:Login=cybertech
      - RMQSettings:Password=cybertech      
    depends_on: 
      - cybertech-administration-db
      - rabbitmq
    networks:
      - network   

  #CyberTech Db 
  cybertech-administration-db:
    image: "postgres:16"
    container_name: 'cybertech-administration-db'
    restart: always 
    ports:
      - 5433:5432
    environment: 
      - POSTGRES_PASSWORD=docker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - network

  #MatchesService
  cybertech-matches-service:
    build: ./MatchesService/
    container_name: 'cybertech-matches-service'
    restart: always 
    ports:
      - "8092:8080"
    environment:
      - RMQSettings:Host=cybertech-rabbitmq
      - RMQSettings:VHost=/
      - RMQSettings:Login=cybertech
      - RMQSettings:Password=cybertech
    depends_on: 
      - rabbitmq


  #RabbitMQ
  rabbitmq:
    image: rabbitmq:management-alpine 
    container_name: 'cybertech-rabbitmq'
    restart: always 
    ports:
      - "5672:5672"  # Порт для AMQP
      - "15672:15672"  # Порт для веб-интерфейса
    environment:
      RABBITMQ_DEFAULT_USER: cybertech  
      RABBITMQ_DEFAULT_PASS: cybertech  
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  # Персистентное хранилище для данных
    networks:
      - network

volumes:
  postgres_data:
  rabbitmq_data:  # Том для хранения данных RabbitMQ

networks:
  network:
    driver: bridge